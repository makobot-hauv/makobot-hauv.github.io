{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home NOTE 3/16/20: These instructions are currently under development and should not yet be used outside of project developers. The Makobot Hovering Autonomous Underwater Vehicle (HAUV) is a research platform for autonomous marine robotics research based on the BlueROV2 from Blue Robotics . These instructions provide a set of hardware augmentations which can be made to a BlueROV2 in order to provide more capabilities for autonomous operation. We also provide a software stack based on the widely-used robotics framework Robot Operating System (ROS) which provides a starting point for research and development. If you do not wish to augment the BlueROV2 hardware and instead just want to get ROS up and running on a vanilla BlueROV2, please take a look at our bluerov_ros software stack . todo: photo of Makobot here About The goal of this project is to build upon recent advances in low-cost, commercial-off-the-shelf underwater Remotely Operated Vehicle (ROV) technologies like the BlueROV2 to democratize access to marine robotics research. While there is now far more variety in robust, low-cost underwater hardware and off-the-shelf ROV systems, there is still significant development overhead required to integrate the extra sensors and computing power necessary to use these systems for online autonomy research. Our aim is to reduce the excess time and cost required for others to get started in marine robotics research by open sourcing the designs, software, and lessons learned in the development of this platform. We encourage contributions of open-source software and hardware from the marine robotics community. License todo","title":"Home"},{"location":"#home","text":"","title":"Home"},{"location":"#note-31620-these-instructions-are-currently-under-development-and-should-not-yet-be-used-outside-of-project-developers","text":"The Makobot Hovering Autonomous Underwater Vehicle (HAUV) is a research platform for autonomous marine robotics research based on the BlueROV2 from Blue Robotics . These instructions provide a set of hardware augmentations which can be made to a BlueROV2 in order to provide more capabilities for autonomous operation. We also provide a software stack based on the widely-used robotics framework Robot Operating System (ROS) which provides a starting point for research and development. If you do not wish to augment the BlueROV2 hardware and instead just want to get ROS up and running on a vanilla BlueROV2, please take a look at our bluerov_ros software stack . todo: photo of Makobot here","title":"NOTE 3/16/20: These instructions are currently under development and should not yet be used outside of project developers."},{"location":"#about","text":"The goal of this project is to build upon recent advances in low-cost, commercial-off-the-shelf underwater Remotely Operated Vehicle (ROV) technologies like the BlueROV2 to democratize access to marine robotics research. While there is now far more variety in robust, low-cost underwater hardware and off-the-shelf ROV systems, there is still significant development overhead required to integrate the extra sensors and computing power necessary to use these systems for online autonomy research. Our aim is to reduce the excess time and cost required for others to get started in marine robotics research by open sourcing the designs, software, and lessons learned in the development of this platform. We encourage contributions of open-source software and hardware from the marine robotics community.","title":"About"},{"location":"#license","text":"todo","title":"License"},{"location":"bom/","text":"Bill of Materials This Bill of Materials documents all components that must be acquired to build a complete Makobot HAUV system. The following link is to version 1.0 of the Bill of Materials on Google Sheets: Makobot HAUV Bill of Materials v1.0 Total Cost: $todo","title":"Bill of Materials"},{"location":"bom/#bill-of-materials","text":"This Bill of Materials documents all components that must be acquired to build a complete Makobot HAUV system. The following link is to version 1.0 of the Bill of Materials on Google Sheets: Makobot HAUV Bill of Materials v1.0 Total Cost: $todo","title":"Bill of Materials"},{"location":"datasheets/","text":"Datasheets This page contains links to datasheets for components of the BlueROV2 and Makobot HAUV.","title":"Datasheets"},{"location":"datasheets/#datasheets","text":"This page contains links to datasheets for components of the BlueROV2 and Makobot HAUV.","title":"Datasheets"},{"location":"quickstart/","text":"Quick Start The following guide outlines the steps for building a Makobot HAUV from scratch. 1. Parts Acquisition A complete parts list for the Makobot HAUV is provided on the Bill of Materials page . Many of the parts specified on this document can be substituted for others depending on your particular project specifications and prior component availability. However, if you are starting from scratch, or want to get the system up and running without spending time modifying sensors and hardware, this parts list will provide a functional vehicle without necessitating excess development and integration time. Notes Some of the parts on the Bill of Materials can have a lead time of several weeks, so it is best to start parts acquisition as early as possible. The supplier listed on the Bill of Materials for the Micro Circular wet-pluggable bulkhead cable penetrators and cable pigtails is Teledyne Impulse , because this is the supplier we have worked with in the past. However, depending on your location and current lead times, you may want to use the Micro Circular wet-pluggable connector series available from SubConn or SEACON . All connectors of the same model number should be interchangeable between manufacturers, but we do recommend sourcing all cables and connectors from a single manufacturer if possible for simplicity and guaranteed interchangeability. 2. Hardware Modifications and Manufacturing todo: links to CAD models for 3D printing, laser cutting, etc. 3. Hardware Assembly todo: assembly todo: wiring 4. Software Bringup todo: software installation and setup 5. Simulations todo: uuv simulator 6. Field Testing todo: recommended field testing toolkit, best practices","title":"Quick Start"},{"location":"quickstart/#quick-start","text":"The following guide outlines the steps for building a Makobot HAUV from scratch.","title":"Quick Start"},{"location":"quickstart/#1-parts-acquisition","text":"A complete parts list for the Makobot HAUV is provided on the Bill of Materials page . Many of the parts specified on this document can be substituted for others depending on your particular project specifications and prior component availability. However, if you are starting from scratch, or want to get the system up and running without spending time modifying sensors and hardware, this parts list will provide a functional vehicle without necessitating excess development and integration time.","title":"1. Parts Acquisition"},{"location":"quickstart/#notes","text":"Some of the parts on the Bill of Materials can have a lead time of several weeks, so it is best to start parts acquisition as early as possible. The supplier listed on the Bill of Materials for the Micro Circular wet-pluggable bulkhead cable penetrators and cable pigtails is Teledyne Impulse , because this is the supplier we have worked with in the past. However, depending on your location and current lead times, you may want to use the Micro Circular wet-pluggable connector series available from SubConn or SEACON . All connectors of the same model number should be interchangeable between manufacturers, but we do recommend sourcing all cables and connectors from a single manufacturer if possible for simplicity and guaranteed interchangeability.","title":"Notes"},{"location":"quickstart/#2-hardware-modifications-and-manufacturing","text":"todo: links to CAD models for 3D printing, laser cutting, etc.","title":"2. Hardware Modifications and Manufacturing"},{"location":"quickstart/#3-hardware-assembly","text":"todo: assembly todo: wiring","title":"3. Hardware Assembly"},{"location":"quickstart/#4-software-bringup","text":"todo: software installation and setup","title":"4. Software Bringup"},{"location":"quickstart/#5-simulations","text":"todo: uuv simulator","title":"5. Simulations"},{"location":"quickstart/#6-field-testing","text":"todo: recommended field testing toolkit, best practices","title":"6. Field Testing"},{"location":"diver-rig/assem/","text":"Diver Rig Assembly","title":"Assembly"},{"location":"diver-rig/assem/#diver-rig-assembly","text":"","title":"Diver Rig Assembly"},{"location":"diver-rig/bom/","text":"Diver Rig Bill of Materials This Bill of Materials documents extra off-the-shelf components that may be acquired to use the downward-facing stereo camera modules as a separate diver-propelled data collection rig. The following link is to version 1.0 of the Bill of Materials on Google Sheets: Diver Rig Bill of Materials v1.0 Total Additional Cost: $todo","title":"Bill of Materials"},{"location":"diver-rig/bom/#diver-rig-bill-of-materials","text":"This Bill of Materials documents extra off-the-shelf components that may be acquired to use the downward-facing stereo camera modules as a separate diver-propelled data collection rig. The following link is to version 1.0 of the Bill of Materials on Google Sheets: Diver Rig Bill of Materials v1.0 Total Additional Cost: $todo","title":"Diver Rig Bill of Materials"},{"location":"diver-rig/mfg/","text":"Diver Rig Manufacturing Chassis Plate","title":"Manufacturing"},{"location":"diver-rig/mfg/#diver-rig-manufacturing","text":"","title":"Diver Rig Manufacturing"},{"location":"diver-rig/mfg/#chassis-plate","text":"","title":"Chassis Plate"},{"location":"diver-rig/overview/","text":"Diver Rig One of the nicer aspects of the stereo camera integration is the camera modules can be removed from the vehicle and used as a standalone system for data collection by a diver or snorkeler. This can free up the overhead for deploying the entire vehicle and enable rapid data collection for development and testing. Quick Start Purchase the additional parts required for the diver rig listed on the Bill of Materials page. Manufacture the diver rig chassis plate on the Manufacturing page. Assemble the diver rig following the instructions on the Assembly page. TODO: photo of diver rig","title":"Diver Rig Overview"},{"location":"diver-rig/overview/#diver-rig","text":"One of the nicer aspects of the stereo camera integration is the camera modules can be removed from the vehicle and used as a standalone system for data collection by a diver or snorkeler. This can free up the overhead for deploying the entire vehicle and enable rapid data collection for development and testing.","title":"Diver Rig"},{"location":"diver-rig/overview/#quick-start","text":"Purchase the additional parts required for the diver rig listed on the Bill of Materials page. Manufacture the diver rig chassis plate on the Manufacturing page. Assemble the diver rig following the instructions on the Assembly page. TODO: photo of diver rig","title":"Quick Start"},{"location":"field-testing/field_testing/","text":"Field Testing Equipment Checklist: Local Testing The following is an equipment checklist for local testing (i.e. pool or SIO). This checklist should not be used to prepare for larger field experiments as more tools should be brought for repairs. Robot Setup Topside Computer Topside Router + power supply USB to Ethernet adapter (depending on topside computer) Logitech f310 gamepad controller BATTERIES General Equipment 100ft extension cord Power strip Tools Multimeter 1 and #2 phillips screwdrivers Metric allen ball drivers","title":"Field Testing"},{"location":"field-testing/field_testing/#field-testing","text":"","title":"Field Testing"},{"location":"field-testing/field_testing/#equipment-checklist-local-testing","text":"The following is an equipment checklist for local testing (i.e. pool or SIO). This checklist should not be used to prepare for larger field experiments as more tools should be brought for repairs.","title":"Equipment Checklist: Local Testing"},{"location":"field-testing/field_testing/#robot-setup","text":"Topside Computer Topside Router + power supply USB to Ethernet adapter (depending on topside computer) Logitech f310 gamepad controller BATTERIES","title":"Robot Setup"},{"location":"field-testing/field_testing/#general-equipment","text":"100ft extension cord Power strip","title":"General Equipment"},{"location":"field-testing/field_testing/#tools","text":"Multimeter","title":"Tools"},{"location":"field-testing/field_testing/#1-and-2-phillips-screwdrivers","text":"Metric allen ball drivers","title":"1 and #2 phillips screwdrivers"},{"location":"hardware/manufacturing/","text":"Manufacturing","title":"Manufacturing"},{"location":"hardware/manufacturing/#manufacturing","text":"","title":"Manufacturing"},{"location":"hardware/modifications/","text":"Hardware Modification Instructions Chassis Modifications Housing Mounting Lift Bail Buoyancy and Ballast Auxiliary Computing Module Stereo Camera Modules Cameras Computing Hardware Sensors","title":"Hardware Modification"},{"location":"hardware/modifications/#hardware-modification-instructions","text":"","title":"Hardware Modification Instructions"},{"location":"hardware/modifications/#chassis-modifications","text":"","title":"Chassis Modifications"},{"location":"hardware/modifications/#housing-mounting","text":"","title":"Housing Mounting"},{"location":"hardware/modifications/#lift-bail","text":"","title":"Lift Bail"},{"location":"hardware/modifications/#buoyancy-and-ballast","text":"","title":"Buoyancy and Ballast"},{"location":"hardware/modifications/#auxiliary-computing-module","text":"","title":"Auxiliary Computing Module"},{"location":"hardware/modifications/#stereo-camera-modules","text":"","title":"Stereo Camera Modules"},{"location":"hardware/modifications/#cameras","text":"","title":"Cameras"},{"location":"hardware/modifications/#computing","text":"","title":"Computing"},{"location":"hardware/modifications/#hardware","text":"","title":"Hardware"},{"location":"hardware/modifications/#sensors","text":"","title":"Sensors"},{"location":"hardware/overview/","text":"Hardware Overview","title":"Hardware Overview"},{"location":"hardware/overview/#hardware-overview","text":"","title":"Hardware Overview"},{"location":"hardware/testing/","text":"Testing Vacuum Testing Housings","title":"Testing"},{"location":"hardware/testing/#testing","text":"","title":"Testing"},{"location":"hardware/testing/#vacuum-testing-housings","text":"","title":"Vacuum Testing Housings"},{"location":"hardware/testing/#_1","text":"","title":""},{"location":"hardware/assembly/assembly/","text":"Hardware Assembly","title":"Hardware Assembly"},{"location":"hardware/assembly/assembly/#hardware-assembly","text":"","title":"Hardware Assembly"},{"location":"hardware/assembly/wiring/","text":"Wiring Modifications Ethernet Wiring The camera modules and the port and starboard modules are connected via Ethernet through 8-pin Teledyne bulkhead connectors. The housings have a female 8-pin bulkhead (Teledyne connector number MCBH-8-FS) and the cables between housings are male 8-pin inline connectors (Teledyne connector MCIL-8-MP) on 2 feet of Belden cable. IMPORTANT NOTE: These Belden cables are not actually rated for ethernet and do not contain twisted pairs. The cables are currently only 2 ft long and we have been observing adequate speeds (limited to 100BASE-T) over these cables, but this could be an issue in the future, especially if increased data speeds (e.g. gigabit) are needed. Cables would need to be replaced with a ProPlex PCCAT5EP or similar cable. Revisit this later if it become an issue. TODO: speed benchmarking across current Teledyne Ethernet cables Belden Cable Wiring The table below shows the mapping from bulkhead pin number to Belden cable wire color. Bulkhead Pin # Belden Cable Wire Color 1 black 2 white 3 red 4 green 5 blue 6 brown 7 yellow 8 orange Each pin number corresponds directly to the number on the punchdown connector (TODO add diagram). I.e., pin 8/orange wire will be wired to pin 8 on the punchdown. The bulkhead connectors use the same convention as the cables for wiring to the punchdown connectors. That is, pin 1/wire 1 on the bulkhead connector will wire to pin 1 on the punchdown connector, etc. Labels 1-8 on the internal white wires on the connectors correspond directly to the pin numbers on the outer bulkhead. Tether Ethernet Wiring The coloring on the tether pairs is different than on the Teledyne cable interconnects. The robot tether pairs are mapped to the punchdown connectors as follows: orange / white green / white blue / white brown / white 2 / 1 6 / 3 4 / 5 8 / 7","title":"Wiring Instructions"},{"location":"hardware/assembly/wiring/#wiring-modifications","text":"","title":"Wiring Modifications"},{"location":"hardware/assembly/wiring/#ethernet-wiring","text":"The camera modules and the port and starboard modules are connected via Ethernet through 8-pin Teledyne bulkhead connectors. The housings have a female 8-pin bulkhead (Teledyne connector number MCBH-8-FS) and the cables between housings are male 8-pin inline connectors (Teledyne connector MCIL-8-MP) on 2 feet of Belden cable. IMPORTANT NOTE: These Belden cables are not actually rated for ethernet and do not contain twisted pairs. The cables are currently only 2 ft long and we have been observing adequate speeds (limited to 100BASE-T) over these cables, but this could be an issue in the future, especially if increased data speeds (e.g. gigabit) are needed. Cables would need to be replaced with a ProPlex PCCAT5EP or similar cable. Revisit this later if it become an issue. TODO: speed benchmarking across current Teledyne Ethernet cables","title":"Ethernet Wiring"},{"location":"hardware/assembly/wiring/#belden-cable-wiring","text":"The table below shows the mapping from bulkhead pin number to Belden cable wire color. Bulkhead Pin # Belden Cable Wire Color 1 black 2 white 3 red 4 green 5 blue 6 brown 7 yellow 8 orange Each pin number corresponds directly to the number on the punchdown connector (TODO add diagram). I.e., pin 8/orange wire will be wired to pin 8 on the punchdown. The bulkhead connectors use the same convention as the cables for wiring to the punchdown connectors. That is, pin 1/wire 1 on the bulkhead connector will wire to pin 1 on the punchdown connector, etc. Labels 1-8 on the internal white wires on the connectors correspond directly to the pin numbers on the outer bulkhead.","title":"Belden Cable Wiring"},{"location":"hardware/assembly/wiring/#tether-ethernet-wiring","text":"The coloring on the tether pairs is different than on the Teledyne cable interconnects. The robot tether pairs are mapped to the punchdown connectors as follows: orange / white green / white blue / white brown / white 2 / 1 6 / 3 4 / 5 8 / 7","title":"Tether Ethernet Wiring"},{"location":"hardware/aux-module/assem/","text":"Auxiliary Computing Module Assembly","title":"Auxiliary Module Assembly"},{"location":"hardware/aux-module/assem/#auxiliary-computing-module-assembly","text":"","title":"Auxiliary Computing Module Assembly"},{"location":"hardware/aux-module/mfg/","text":"Auxiliary Computing Module Manufacturing Internal Mounting Manufacturing Endcap Modifications for Bulkhead Penetrators Tether Modifications Tether Splicing Tether Wiring","title":"Auxiliary Module Manufacturing"},{"location":"hardware/aux-module/mfg/#auxiliary-computing-module-manufacturing","text":"","title":"Auxiliary Computing Module Manufacturing"},{"location":"hardware/aux-module/mfg/#internal-mounting-manufacturing","text":"","title":"Internal Mounting Manufacturing"},{"location":"hardware/aux-module/mfg/#endcap-modifications-for-bulkhead-penetrators","text":"","title":"Endcap Modifications for Bulkhead Penetrators"},{"location":"hardware/aux-module/mfg/#tether-modifications","text":"","title":"Tether Modifications"},{"location":"hardware/aux-module/mfg/#tether-splicing","text":"","title":"Tether Splicing"},{"location":"hardware/aux-module/mfg/#tether-wiring","text":"","title":"Tether Wiring"},{"location":"hardware/camera-modules/assem/","text":"Camera Module Assembly Ethernet Wiring (Optional) Power Over Ethernet Power Wiring Hardware Synchronization Wiring? Testing","title":"Camera Module Assembly"},{"location":"hardware/camera-modules/assem/#camera-module-assembly","text":"","title":"Camera Module Assembly"},{"location":"hardware/camera-modules/assem/#ethernet-wiring","text":"","title":"Ethernet Wiring"},{"location":"hardware/camera-modules/assem/#optional-power-over-ethernet","text":"","title":"(Optional) Power Over Ethernet"},{"location":"hardware/camera-modules/assem/#power-wiring","text":"","title":"Power Wiring"},{"location":"hardware/camera-modules/assem/#hardware-synchronization-wiring","text":"","title":"Hardware Synchronization Wiring?"},{"location":"hardware/camera-modules/assem/#testing","text":"","title":"Testing"},{"location":"hardware/camera-modules/mfg/","text":"Camera Module Manufacturing Internal Mounting Manufacturing","title":"Camera Module Manufacturing"},{"location":"hardware/camera-modules/mfg/#camera-module-manufacturing","text":"","title":"Camera Module Manufacturing"},{"location":"hardware/camera-modules/mfg/#internal-mounting-manufacturing","text":"","title":"Internal Mounting Manufacturing"},{"location":"hardware/power-module/assem/","text":"Power Module Assembly","title":"Power Module Assembly"},{"location":"hardware/power-module/assem/#power-module-assembly","text":"","title":"Power Module Assembly"},{"location":"hardware/power-module/mfg/","text":"Power Module Manufacturing Power Distribution, On/off Switch, Low-Voltage Cutoff TODO: drop weight Endcap Modifications for Bulkhead Penetrators","title":"Power Module Manufacturing"},{"location":"hardware/power-module/mfg/#power-module-manufacturing","text":"","title":"Power Module Manufacturing"},{"location":"hardware/power-module/mfg/#power-distribution-onoff-switch-low-voltage-cutoff","text":"","title":"Power Distribution, On/off Switch, Low-Voltage Cutoff"},{"location":"hardware/power-module/mfg/#todo-drop-weight","text":"","title":"TODO: drop weight"},{"location":"hardware/power-module/mfg/#endcap-modifications-for-bulkhead-penetrators","text":"","title":"Endcap Modifications for Bulkhead Penetrators"},{"location":"hardware/primary-module/assem/","text":"Primary Module Assembly Thruster Installation","title":"Primary Module Assembly"},{"location":"hardware/primary-module/assem/#primary-module-assembly","text":"","title":"Primary Module Assembly"},{"location":"hardware/primary-module/assem/#thruster-installation","text":"","title":"Thruster Installation"},{"location":"hardware/primary-module/mod/","text":"Primary Module Modifications Forward-Facing Camera Mounting Fixed for stereo calibration vs servo for inspection camera Endcap Modifications for Bulkhead Penetrators","title":"Primary Module Modifications"},{"location":"hardware/primary-module/mod/#primary-module-modifications","text":"","title":"Primary Module Modifications"},{"location":"hardware/primary-module/mod/#forward-facing-camera-mounting","text":"Fixed for stereo calibration vs servo for inspection camera","title":"Forward-Facing Camera Mounting"},{"location":"hardware/primary-module/mod/#endcap-modifications-for-bulkhead-penetrators","text":"","title":"Endcap Modifications for Bulkhead Penetrators"},{"location":"simulation/overview/","text":"Simulations TODO: makobot simulations with UUV simulator","title":"Simulations with UUV Simulator"},{"location":"simulation/overview/#simulations","text":"TODO: makobot simulations with UUV simulator","title":"Simulations"},{"location":"software/cameraconfig/","text":"Camera Configuration Configure IP addresses for GigE cameras todo Camera IP Addresses Basler1: 192.168.3.23 Basler2: 192.168.4.24 Set up Networking on fitlet2 todo subnet of each NIC","title":"Camera Configuration"},{"location":"software/cameraconfig/#camera-configuration","text":"","title":"Camera Configuration"},{"location":"software/cameraconfig/#configure-ip-addresses-for-gige-cameras","text":"todo","title":"Configure IP addresses for GigE cameras"},{"location":"software/cameraconfig/#camera-ip-addresses","text":"Basler1: 192.168.3.23 Basler2: 192.168.4.24","title":"Camera IP Addresses"},{"location":"software/cameraconfig/#set-up-networking-on-fitlet2","text":"todo subnet of each NIC","title":"Set up Networking on fitlet2"},{"location":"software/installation/","text":"Software Installation The Makobot HAUV system uses the Robot Operating System (ROS) on Ubuntu Linux. These instructions will assume use of Ubuntu 18.04 and ROS Melodic, but other versions should work as well. We recommend using Ubuntu for all computers in the system. Install Ubuntu and ROS Raspberry Pi The Raspberry Pi comes pre-installed with Raspbian (based on Debian). For using ROS, we recommend running Ubuntu Mate instead of Raspbian to avoid having to compile ROS from source. If you wish to run the default Raspbian image, follow the instructions on Installing ROS Kinetic on the Raspberry Pi to build and install ROS from source. If you choose to run Ubuntu Mate, install ROS Melodic using the usual ROS installation instructions for Ubuntu. Fitlet2 Download the most recent 18.04 release of theAMD64 version of Ubuntu Mate and install it on the Fitlet. Follow the instructions to install ROS Melodic . Jetson TX2 TODO Install ROS Dependencies and Packages Now that ROS is installed on all computers, we're going to install some dependencies and packages. TODO: explanation of master computer packages to install vs packages needed on only some computers TODO: which computer is ROS master? Raspberry Pi? Raspberry Pi After installing ROS, install the following packages on the Raspberry Pi. (These instructions assume you are using Ubuntu Mate and are installing the packages in the apt repositories; Raspbian users must compile from source.) sudo apt - get install python - catkin - tools ros - kinetic - joy ros - kinetic - robot - state - publisher ros - kinetic - robot - localization ros - kinetic - mavros ros - kinetic - mavros - extras ros - kinetic - sound - play Install GeographicLib (needed for mavros) by downloading and running the installation script: wget https : // raw . githubusercontent . com / mavlink / mavros / master / mavros / scripts / install_geographiclib_datasets . sh . / install_geographiclib_datasets . sh Make sure you've created a catkin workspace by following the instructions in ROS Environment Setup . In /src, clone this repository: git clone --recurse-submodules https://github.com/awilby/bluerov_ros.git cd .. catkin build Install udev Rules Copy the udev rules from the bluerov_robot and bluerov_teleop packages to /etc/udev/rules.d/ . Reload udev rules by running sudo udevadm control --reload . Fitlet2 TODO NVIDIA Jetson TX2 TODO","title":"Software Installation"},{"location":"software/installation/#software-installation","text":"The Makobot HAUV system uses the Robot Operating System (ROS) on Ubuntu Linux. These instructions will assume use of Ubuntu 18.04 and ROS Melodic, but other versions should work as well. We recommend using Ubuntu for all computers in the system.","title":"Software Installation"},{"location":"software/installation/#install-ubuntu-and-ros","text":"","title":"Install Ubuntu and ROS"},{"location":"software/installation/#raspberry-pi","text":"The Raspberry Pi comes pre-installed with Raspbian (based on Debian). For using ROS, we recommend running Ubuntu Mate instead of Raspbian to avoid having to compile ROS from source. If you wish to run the default Raspbian image, follow the instructions on Installing ROS Kinetic on the Raspberry Pi to build and install ROS from source. If you choose to run Ubuntu Mate, install ROS Melodic using the usual ROS installation instructions for Ubuntu.","title":"Raspberry Pi"},{"location":"software/installation/#fitlet2","text":"Download the most recent 18.04 release of theAMD64 version of Ubuntu Mate and install it on the Fitlet. Follow the instructions to install ROS Melodic .","title":"Fitlet2"},{"location":"software/installation/#jetson-tx2","text":"TODO","title":"Jetson TX2"},{"location":"software/installation/#install-ros-dependencies-and-packages","text":"Now that ROS is installed on all computers, we're going to install some dependencies and packages. TODO: explanation of master computer packages to install vs packages needed on only some computers TODO: which computer is ROS master? Raspberry Pi?","title":"Install ROS Dependencies and Packages"},{"location":"software/installation/#raspberry-pi_1","text":"After installing ROS, install the following packages on the Raspberry Pi. (These instructions assume you are using Ubuntu Mate and are installing the packages in the apt repositories; Raspbian users must compile from source.) sudo apt - get install python - catkin - tools ros - kinetic - joy ros - kinetic - robot - state - publisher ros - kinetic - robot - localization ros - kinetic - mavros ros - kinetic - mavros - extras ros - kinetic - sound - play Install GeographicLib (needed for mavros) by downloading and running the installation script: wget https : // raw . githubusercontent . com / mavlink / mavros / master / mavros / scripts / install_geographiclib_datasets . sh . / install_geographiclib_datasets . sh Make sure you've created a catkin workspace by following the instructions in ROS Environment Setup . In /src, clone this repository: git clone --recurse-submodules https://github.com/awilby/bluerov_ros.git cd .. catkin build","title":"Raspberry Pi"},{"location":"software/installation/#install-udev-rules","text":"Copy the udev rules from the bluerov_robot and bluerov_teleop packages to /etc/udev/rules.d/ . Reload udev rules by running sudo udevadm control --reload .","title":"Install udev Rules"},{"location":"software/installation/#fitlet2_1","text":"TODO","title":"Fitlet2"},{"location":"software/installation/#nvidia-jetson-tx2","text":"TODO","title":"NVIDIA Jetson TX2"},{"location":"software/networking/","text":"Networking Set up Networking on fitlet2 todo: set static IP subnet of each NIC Set up Networking on Raspberry Pi todo: set static IP Set up Networking on Jetson TX2 todo: set static IP Edit Hosts File Edit /etc/hosts file and add the following lines: 192 . 168 . 2 . 2 makobot - pi 192 . 168 . 2 . 13 fitlet2 - 1 192 . 168 . 2 . 169 jetson - tx2 Set up SSH Keys As per the ROS issue described here , we have to set up SSH keys so that roslaunch can correctly SSH into the different machines. Do this step on the topside computer as that is where we will be launching the ROS processes from. Generate the RSA key pair as usual: ssh-keygen -t rsa Save the file in the default location and don't set a passphrase by hitting enter at the prompts (leave blank for no passphrase). Copy the public key over to the other computer, replacing and with the respective username and host address of your machine: ssh-copy-id -oHostKeyAlgorithms='ssh-rsa' <user>@<host> The key here is to use the -oHostKeyAlgorithms='ssh-rsa' when SSH-ing as described in the ROS answers post above. Now when you use roslaunch to launch nodes on remote machines, roslaunch should be able to SSH into the machine without issues. Repeat step 2 for every computer onboard Makobot, copying the RSA key to the Raspberry Pi, the Fitlet2, and the Jetson TX2.","title":"Networking Configuration"},{"location":"software/networking/#networking","text":"","title":"Networking"},{"location":"software/networking/#set-up-networking-on-fitlet2","text":"todo: set static IP subnet of each NIC","title":"Set up Networking on fitlet2"},{"location":"software/networking/#set-up-networking-on-raspberry-pi","text":"todo: set static IP","title":"Set up Networking on Raspberry Pi"},{"location":"software/networking/#set-up-networking-on-jetson-tx2","text":"todo: set static IP","title":"Set up Networking on Jetson TX2"},{"location":"software/networking/#edit-hosts-file","text":"Edit /etc/hosts file and add the following lines: 192 . 168 . 2 . 2 makobot - pi 192 . 168 . 2 . 13 fitlet2 - 1 192 . 168 . 2 . 169 jetson - tx2","title":"Edit Hosts File"},{"location":"software/networking/#set-up-ssh-keys","text":"As per the ROS issue described here , we have to set up SSH keys so that roslaunch can correctly SSH into the different machines. Do this step on the topside computer as that is where we will be launching the ROS processes from. Generate the RSA key pair as usual: ssh-keygen -t rsa Save the file in the default location and don't set a passphrase by hitting enter at the prompts (leave blank for no passphrase). Copy the public key over to the other computer, replacing and with the respective username and host address of your machine: ssh-copy-id -oHostKeyAlgorithms='ssh-rsa' <user>@<host> The key here is to use the -oHostKeyAlgorithms='ssh-rsa' when SSH-ing as described in the ROS answers post above. Now when you use roslaunch to launch nodes on remote machines, roslaunch should be able to SSH into the machine without issues. Repeat step 2 for every computer onboard Makobot, copying the RSA key to the Raspberry Pi, the Fitlet2, and the Jetson TX2.","title":"Set up SSH Keys"},{"location":"software/overview/","text":"Software Overview","title":"Software Overview"},{"location":"software/overview/#software-overview","text":"","title":"Software Overview"},{"location":"software/topside/","text":"Topside Computer Configuration TODO Set up Networking on Topside Computer These instructions assume the topside computer is running Ubuntu Linux 18.04 and ROS. On the topside computer we'll use NetworkManager for convenience. Create a new connection in NetworkManager and use the \"Manual\" IPv4 configuration. Assign the static IP address 192.168.2.1 and the netmask 255.255.255.0 , and leave the gateway blank. Find the hostname of your topside computer by running hostname at the command prompt. Edit the /etc/hosts file and add the following lines: 192 . 168 . 2 . 1 < your hostname > 192 . 168 . 2 . 2 makobot - pi 192 . 168 . 2 . 13 fitlet2 - 1 192 . 168 . 2 . 169 jetson - tx2","title":"Topside Configuration (Optional)"},{"location":"software/topside/#topside-computer-configuration","text":"TODO","title":"Topside Computer Configuration"},{"location":"software/topside/#set-up-networking-on-topside-computer","text":"These instructions assume the topside computer is running Ubuntu Linux 18.04 and ROS. On the topside computer we'll use NetworkManager for convenience. Create a new connection in NetworkManager and use the \"Manual\" IPv4 configuration. Assign the static IP address 192.168.2.1 and the netmask 255.255.255.0 , and leave the gateway blank. Find the hostname of your topside computer by running hostname at the command prompt. Edit the /etc/hosts file and add the following lines: 192 . 168 . 2 . 1 < your hostname > 192 . 168 . 2 . 2 makobot - pi 192 . 168 . 2 . 13 fitlet2 - 1 192 . 168 . 2 . 169 jetson - tx2","title":"Set up Networking on Topside Computer"}]}