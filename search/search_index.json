{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home NOTE 3/16/20: These instructions are currently under development and should not yet be used outside of project developers. The Makobot Hovering Autonomous Underwater Vehicle (HAUV) is a research platform for autonomous marine robotics research based on the BlueROV2 from Blue Robotics . These instructions provide a set of hardware augmentations which can be made to a BlueROV2 in order to provide more capabilities for autonomous operation. We also provide a software stack based on the widely-used robotics framework Robot Operating System (ROS) which provides a starting point for research and development. If you do not wish to augment the BlueROV2 hardware and instead just want to get ROS up and running on a vanilla BlueROV2, please take a look at our bluerov_ros software stack . About The goal of this project is to build upon recent advances in low-cost, commercial-off-the-shelf underwater Remotely Operated Vehicle (ROV) technologies like the BlueROV2 to democratize access to marine robotics research. While there is now far more variety in robust, low-cost underwater hardware and off-the-shelf ROV systems, there is still significant development overhead required to integrate the extra sensors and computing power necessary to use these systems for online autonomy research. Our aim is to reduce the excess time and cost required for others to get started in marine robotics research by open sourcing the designs, software, and lessons learned in the development of this platform. We encourage contributions of open-source software and hardware from the marine robotics community. License todo","title":"Home"},{"location":"#home","text":"","title":"Home"},{"location":"#note-31620-these-instructions-are-currently-under-development-and-should-not-yet-be-used-outside-of-project-developers","text":"The Makobot Hovering Autonomous Underwater Vehicle (HAUV) is a research platform for autonomous marine robotics research based on the BlueROV2 from Blue Robotics . These instructions provide a set of hardware augmentations which can be made to a BlueROV2 in order to provide more capabilities for autonomous operation. We also provide a software stack based on the widely-used robotics framework Robot Operating System (ROS) which provides a starting point for research and development. If you do not wish to augment the BlueROV2 hardware and instead just want to get ROS up and running on a vanilla BlueROV2, please take a look at our bluerov_ros software stack .","title":"NOTE 3/16/20: These instructions are currently under development and should not yet be used outside of project developers."},{"location":"#about","text":"The goal of this project is to build upon recent advances in low-cost, commercial-off-the-shelf underwater Remotely Operated Vehicle (ROV) technologies like the BlueROV2 to democratize access to marine robotics research. While there is now far more variety in robust, low-cost underwater hardware and off-the-shelf ROV systems, there is still significant development overhead required to integrate the extra sensors and computing power necessary to use these systems for online autonomy research. Our aim is to reduce the excess time and cost required for others to get started in marine robotics research by open sourcing the designs, software, and lessons learned in the development of this platform. We encourage contributions of open-source software and hardware from the marine robotics community.","title":"About"},{"location":"#license","text":"todo","title":"License"},{"location":"bom/","text":"Bill of Materials This Bill of Materials documents all components that must be acquired to build a complete Makobot HAUV system. The following link is to version 1.0 of the Bill of Materials on Google Sheets: Makobot HAUV Bill of Materials v1.0 Total Cost: $todo","title":"Bill of Materials"},{"location":"bom/#bill-of-materials","text":"This Bill of Materials documents all components that must be acquired to build a complete Makobot HAUV system. The following link is to version 1.0 of the Bill of Materials on Google Sheets: Makobot HAUV Bill of Materials v1.0 Total Cost: $todo","title":"Bill of Materials"},{"location":"quickstart/","text":"Quick Start The following guide outlines the steps for building a Makobot HAUV from scratch. 1. Parts Acquisition A complete parts list for the Makobot HAUV is provided on the Bill of Materials page . Many of the parts specified on this document can be substituted for others depending on your particular project specifications and prior component availability. However, if you are starting from scratch, or want to get the system up and running without spending time modifying sensors and hardware, this parts list will provide a functional vehicle without necessitating excess development and integration time. Notes Some of the parts on the Bill of Materials can have a lead time of several weeks, so it is best to start parts acquisition as early as possible. The supplier listed on the Bill of Materials for the Micro Circular wet-pluggable bulkhead cable penetrators and cable pigtails is Teledyne Impulse , because this is the supplier we have worked with in the past. However, depending on your location and current lead times, you may want to use the Micro Circular wet-pluggable connector series available from SubConn or SEACON . All connectors of the same model number should be interchangeable between manufacturers, but we do recommend sourcing all cables and connectors from a single manufacturer if possible for simplicity and guaranteed interchangeability. 2. Hardware Modifications and Manufacturing todo: links to CAD models for 3D printing, laser cutting, etc. 3. Hardware Assembly todo: assembly todo: wiring 4. Software Bringup todo: software installation and setup 5. Simulations todo: uuv simulator 6. Field Testing todo: recommended field testing toolkit, best practices","title":"Quick Start"},{"location":"quickstart/#quick-start","text":"The following guide outlines the steps for building a Makobot HAUV from scratch.","title":"Quick Start"},{"location":"quickstart/#1-parts-acquisition","text":"A complete parts list for the Makobot HAUV is provided on the Bill of Materials page . Many of the parts specified on this document can be substituted for others depending on your particular project specifications and prior component availability. However, if you are starting from scratch, or want to get the system up and running without spending time modifying sensors and hardware, this parts list will provide a functional vehicle without necessitating excess development and integration time.","title":"1. Parts Acquisition"},{"location":"quickstart/#notes","text":"Some of the parts on the Bill of Materials can have a lead time of several weeks, so it is best to start parts acquisition as early as possible. The supplier listed on the Bill of Materials for the Micro Circular wet-pluggable bulkhead cable penetrators and cable pigtails is Teledyne Impulse , because this is the supplier we have worked with in the past. However, depending on your location and current lead times, you may want to use the Micro Circular wet-pluggable connector series available from SubConn or SEACON . All connectors of the same model number should be interchangeable between manufacturers, but we do recommend sourcing all cables and connectors from a single manufacturer if possible for simplicity and guaranteed interchangeability.","title":"Notes"},{"location":"quickstart/#2-hardware-modifications-and-manufacturing","text":"todo: links to CAD models for 3D printing, laser cutting, etc.","title":"2. Hardware Modifications and Manufacturing"},{"location":"quickstart/#3-hardware-assembly","text":"todo: assembly todo: wiring","title":"3. Hardware Assembly"},{"location":"quickstart/#4-software-bringup","text":"todo: software installation and setup","title":"4. Software Bringup"},{"location":"quickstart/#5-simulations","text":"todo: uuv simulator","title":"5. Simulations"},{"location":"quickstart/#6-field-testing","text":"todo: recommended field testing toolkit, best practices","title":"6. Field Testing"},{"location":"field-testing/field_testing/","text":"Field Testing Equipment Checklist: Local Testing The following is an equipment checklist for local testing (i.e. pool or SIO). This checklist should not be used to prepare for larger field experiments as more tools should be brought for repairs. Robot Setup Topside Computer Topside Router + power supply USB to Ethernet adapter (depending on topside computer) Logitech f310 gamepad controller BATTERIES General Equipment 100ft extension cord Power strip Tools Multimeter 1 and #2 phillips screwdrivers Metric allen ball drivers","title":"Field Testing"},{"location":"field-testing/field_testing/#field-testing","text":"","title":"Field Testing"},{"location":"field-testing/field_testing/#equipment-checklist-local-testing","text":"The following is an equipment checklist for local testing (i.e. pool or SIO). This checklist should not be used to prepare for larger field experiments as more tools should be brought for repairs.","title":"Equipment Checklist: Local Testing"},{"location":"field-testing/field_testing/#robot-setup","text":"Topside Computer Topside Router + power supply USB to Ethernet adapter (depending on topside computer) Logitech f310 gamepad controller BATTERIES","title":"Robot Setup"},{"location":"field-testing/field_testing/#general-equipment","text":"100ft extension cord Power strip","title":"General Equipment"},{"location":"field-testing/field_testing/#tools","text":"Multimeter","title":"Tools"},{"location":"field-testing/field_testing/#1-and-2-phillips-screwdrivers","text":"Metric allen ball drivers","title":"1 and #2 phillips screwdrivers"},{"location":"hardware/robot_modifications/","text":"Robot Modifications Cameras Computing Hardware Sensors","title":"Robot Modification Instructions"},{"location":"hardware/robot_modifications/#robot-modifications","text":"","title":"Robot Modifications"},{"location":"hardware/robot_modifications/#cameras","text":"","title":"Cameras"},{"location":"hardware/robot_modifications/#computing","text":"","title":"Computing"},{"location":"hardware/robot_modifications/#hardware","text":"","title":"Hardware"},{"location":"hardware/robot_modifications/#sensors","text":"","title":"Sensors"},{"location":"hardware/wiring/","text":"Wiring Modifications Ethernet Wiring The camera modules and the port and starboard modules are connected via Ethernet through 8-pin Teledyne bulkhead connectors. The housings have a female 8-pin bulkhead (Teledyne connector number MCBH-8-FS) and the cables between housings are male 8-pin inline connectors (Teledyne connector MCIL-8-MP) on 2 feet of Belden cable. IMPORTANT NOTE: These Belden cables are not actually rated for ethernet and do not contain twisted pairs. The cables are currently only 2 ft long and we have been observing adequate speeds (limited to 100BASE-T) over these cables, but this could be an issue in the future, especially if increased data speeds (e.g. gigabit) are needed. Cables would need to be replaced with a ProPlex PCCAT5EP or similar cable. Revisit this later if it become an issue. TODO: speed benchmarking across current Teledyne Ethernet cables Belden Cable Wiring The table below shows the mapping from bulkhead pin number to Belden cable wire color. Bulkhead Pin # Belden Cable Wire Color 1 black 2 white 3 red 4 green 5 blue 6 brown 7 yellow 8 orange Each pin number corresponds directly to the number on the punchdown connector (TODO add diagram). I.e., pin 8/orange wire will be wired to pin 8 on the punchdown. The bulkhead connectors use the same convention as the cables for wiring to the punchdown connectors. That is, pin 1/wire 1 on the bulkhead connector will wire to pin 1 on the punchdown connector, etc. Labels 1-8 on the internal white wires on the connectors correspond directly to the pin numbers on the outer bulkhead. Tether Ethernet Wiring The coloring on the tether pairs is different than on the Teledyne cable interconnects. The robot tether pairs are mapped to the punchdown connectors as follows: orange / white green / white blue / white brown / white 2 / 1 6 / 3 4 / 5 8 / 7","title":"Wiring Instructions"},{"location":"hardware/wiring/#wiring-modifications","text":"","title":"Wiring Modifications"},{"location":"hardware/wiring/#ethernet-wiring","text":"The camera modules and the port and starboard modules are connected via Ethernet through 8-pin Teledyne bulkhead connectors. The housings have a female 8-pin bulkhead (Teledyne connector number MCBH-8-FS) and the cables between housings are male 8-pin inline connectors (Teledyne connector MCIL-8-MP) on 2 feet of Belden cable. IMPORTANT NOTE: These Belden cables are not actually rated for ethernet and do not contain twisted pairs. The cables are currently only 2 ft long and we have been observing adequate speeds (limited to 100BASE-T) over these cables, but this could be an issue in the future, especially if increased data speeds (e.g. gigabit) are needed. Cables would need to be replaced with a ProPlex PCCAT5EP or similar cable. Revisit this later if it become an issue. TODO: speed benchmarking across current Teledyne Ethernet cables","title":"Ethernet Wiring"},{"location":"hardware/wiring/#belden-cable-wiring","text":"The table below shows the mapping from bulkhead pin number to Belden cable wire color. Bulkhead Pin # Belden Cable Wire Color 1 black 2 white 3 red 4 green 5 blue 6 brown 7 yellow 8 orange Each pin number corresponds directly to the number on the punchdown connector (TODO add diagram). I.e., pin 8/orange wire will be wired to pin 8 on the punchdown. The bulkhead connectors use the same convention as the cables for wiring to the punchdown connectors. That is, pin 1/wire 1 on the bulkhead connector will wire to pin 1 on the punchdown connector, etc. Labels 1-8 on the internal white wires on the connectors correspond directly to the pin numbers on the outer bulkhead.","title":"Belden Cable Wiring"},{"location":"hardware/wiring/#tether-ethernet-wiring","text":"The coloring on the tether pairs is different than on the Teledyne cable interconnects. The robot tether pairs are mapped to the punchdown connectors as follows: orange / white green / white blue / white brown / white 2 / 1 6 / 3 4 / 5 8 / 7","title":"Tether Ethernet Wiring"},{"location":"simulation/simulations/","text":"Simulations TODO: makobot simulations with UUV simulator","title":"Simulations with UUV Simulator"},{"location":"simulation/simulations/#simulations","text":"TODO: makobot simulations with UUV simulator","title":"Simulations"},{"location":"software/fitlet_installation/","text":"Fitlet2 Software Installation Install ROS Install Dependencies","title":"Fitlet2 Software Installation"},{"location":"software/fitlet_installation/#fitlet2-software-installation","text":"","title":"Fitlet2 Software Installation"},{"location":"software/fitlet_installation/#install-ros","text":"","title":"Install ROS"},{"location":"software/fitlet_installation/#install-dependencies","text":"","title":"Install Dependencies"},{"location":"software/jetson_installation/","text":"NVIDIA Jetson TX2 Software Installation","title":"Jetson TX2 Software Installation"},{"location":"software/jetson_installation/#nvidia-jetson-tx2-software-installation","text":"","title":"NVIDIA Jetson TX2 Software Installation"},{"location":"software/networking/","text":"Networking Set up Networking on Topside Computer These instructions assume the topside computer is running Ubuntu Linux 18.04 and ROS. On the topside computer we'll use NetworkManager for convenience. Create a new connection in NetworkManager and use the \"Manual\" IPv4 configuration. Assign the static IP address 192.168.2.1 and the netmask 255.255.255.0 , and leave the gateway blank. Find the hostname of your topside computer by running hostname at the command prompt. Edit the /etc/hosts file and add the following lines: 192 . 168 . 2 . 1 < your hostname > 192 . 168 . 2 . 2 makobot - pi 192 . 168 . 2 . 13 fitlet2 - 1 192 . 168 . 2 . 169 jetson - tx2 Configure IP addresses for GigE cameras todo Camera IP Addresses Basler1: 192.168.3.23 Basler2: 192.168.4.24 Set up Networking on fitlet2 todo subnet of each NIC Set up Networking on Raspberry Pi Edit /etc/hosts file and add the same lines as during the topside configuration. Set up Networking on Jetson TX2 todo Set up SSH Keys As per the ROS issue described here , we have to set up SSH keys so that roslaunch can correctly SSH into the different machines. Do this step on the topside computer as that is where we will be launching the ROS processes from. Generate the RSA key pair as usual: ssh-keygen -t rsa Save the file in the default location and don't set a passphrase by hitting enter at the prompts (leave blank for no passphrase). Copy the public key over to the other computer, replacing and with the respective username and host address of your machine: ssh-copy-id -oHostKeyAlgorithms='ssh-rsa' <user>@<host> The key here is to use the -oHostKeyAlgorithms='ssh-rsa' when SSH-ing as described in the ROS answers post above. Now when you use roslaunch to launch nodes on remote machines, roslaunch should be able to SSH into the machine without issues. Repeat step 2 for every computer onboard Makobot, copying the RSA key to the Raspberry Pi, the Fitlet2, and the Jetson TX2.","title":"Networking Configuration"},{"location":"software/networking/#networking","text":"","title":"Networking"},{"location":"software/networking/#set-up-networking-on-topside-computer","text":"These instructions assume the topside computer is running Ubuntu Linux 18.04 and ROS. On the topside computer we'll use NetworkManager for convenience. Create a new connection in NetworkManager and use the \"Manual\" IPv4 configuration. Assign the static IP address 192.168.2.1 and the netmask 255.255.255.0 , and leave the gateway blank. Find the hostname of your topside computer by running hostname at the command prompt. Edit the /etc/hosts file and add the following lines: 192 . 168 . 2 . 1 < your hostname > 192 . 168 . 2 . 2 makobot - pi 192 . 168 . 2 . 13 fitlet2 - 1 192 . 168 . 2 . 169 jetson - tx2","title":"Set up Networking on Topside Computer"},{"location":"software/networking/#configure-ip-addresses-for-gige-cameras","text":"todo","title":"Configure IP addresses for GigE cameras"},{"location":"software/networking/#camera-ip-addresses","text":"Basler1: 192.168.3.23 Basler2: 192.168.4.24","title":"Camera IP Addresses"},{"location":"software/networking/#set-up-networking-on-fitlet2","text":"todo subnet of each NIC","title":"Set up Networking on fitlet2"},{"location":"software/networking/#set-up-networking-on-raspberry-pi","text":"Edit /etc/hosts file and add the same lines as during the topside configuration.","title":"Set up Networking on Raspberry Pi"},{"location":"software/networking/#set-up-networking-on-jetson-tx2","text":"todo","title":"Set up Networking on Jetson TX2"},{"location":"software/networking/#set-up-ssh-keys","text":"As per the ROS issue described here , we have to set up SSH keys so that roslaunch can correctly SSH into the different machines. Do this step on the topside computer as that is where we will be launching the ROS processes from. Generate the RSA key pair as usual: ssh-keygen -t rsa Save the file in the default location and don't set a passphrase by hitting enter at the prompts (leave blank for no passphrase). Copy the public key over to the other computer, replacing and with the respective username and host address of your machine: ssh-copy-id -oHostKeyAlgorithms='ssh-rsa' <user>@<host> The key here is to use the -oHostKeyAlgorithms='ssh-rsa' when SSH-ing as described in the ROS answers post above. Now when you use roslaunch to launch nodes on remote machines, roslaunch should be able to SSH into the machine without issues. Repeat step 2 for every computer onboard Makobot, copying the RSA key to the Raspberry Pi, the Fitlet2, and the Jetson TX2.","title":"Set up SSH Keys"},{"location":"software/ros_installation/","text":"ROS Software Installation Follow the installation instructions at the link below for your version of ROS and Ubuntu. The ROS Kinetic on Ubuntu 16.04 ROS Melodic on Ubuntu 18.04 Raspberry Pi The Raspberry Pi Fitlet2 Jetson TX2","title":"ROS Installation"},{"location":"software/ros_installation/#ros-software-installation","text":"Follow the installation instructions at the link below for your version of ROS and Ubuntu. The ROS Kinetic on Ubuntu 16.04 ROS Melodic on Ubuntu 18.04","title":"ROS Software Installation"},{"location":"software/ros_installation/#raspberry-pi","text":"The Raspberry Pi","title":"Raspberry Pi"},{"location":"software/ros_installation/#fitlet2","text":"","title":"Fitlet2"},{"location":"software/ros_installation/#jetson-tx2","text":"","title":"Jetson TX2"},{"location":"software/software/","text":"Software The Makobot HAUV system uses the Robot Operating System (ROS) on Ubuntu Linux. Raspberry Pi The Raspberry Pi comes pre-installed with Fitlet2 Jetson TX2","title":"Software"},{"location":"software/software/#software","text":"The Makobot HAUV system uses the Robot Operating System (ROS) on Ubuntu Linux.","title":"Software"},{"location":"software/software/#raspberry-pi","text":"The Raspberry Pi comes pre-installed with","title":"Raspberry Pi"},{"location":"software/software/#fitlet2","text":"","title":"Fitlet2"},{"location":"software/software/#jetson-tx2","text":"","title":"Jetson TX2"}]}